[{"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\index.js":"1","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\App.js":"2","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\components\\PublicNavbar.js":"3","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\Upcoming.js":"4","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\TopRated.js":"5","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\Home.js":"6","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\apiService.js":"7","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\components\\PaginationBar.js":"8","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\AboutMovie.js":"9","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\components\\SearchForm.js":"10"},{"size":151,"mtime":1607052651776,"results":"11","hashOfConfig":"12"},{"size":894,"mtime":1607312541563,"results":"13","hashOfConfig":"12"},{"size":917,"mtime":1607067414247,"results":"14","hashOfConfig":"12"},{"size":2813,"mtime":1607310971237,"results":"15","hashOfConfig":"12"},{"size":2812,"mtime":1607310957126,"results":"16","hashOfConfig":"12"},{"size":2787,"mtime":1607312593746,"results":"17","hashOfConfig":"12"},{"size":1255,"mtime":1607058863156,"results":"18","hashOfConfig":"12"},{"size":1683,"mtime":1607067366545,"results":"19","hashOfConfig":"12"},{"size":1722,"mtime":1607312595523,"results":"20","hashOfConfig":"12"},{"size":842,"mtime":1607076614291,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1sprni0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\index.js",[],["46","47"],"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\App.js",[],"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\components\\PublicNavbar.js",["48"],"import React from \"react\";\r\nimport { Navbar, Nav, NavLink } from \"react-bootstrap\";\r\nimport logo from \"../images/logo.svg\";\r\nimport githubIco from \"../images/github_icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PublicNavbar = () => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand>\r\n        <img src={logo} alt=\"CoderSchool\" width=\"200px\" />\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link as={Link} to=\"/\">\r\n          Home\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} to=\"/toprated\">\r\n          Top Rated\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} to=\"/upcoming\">\r\n          Upcoming\r\n        </Nav.Link>\r\n      </Nav>\r\n      <Nav>\r\n        <a href=\"#your_github_repo_link\" target=\"_blank\">\r\n          <img src={githubIco} alt=\"Github\" width=\"32px\" />\r\n        </a>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default PublicNavbar;\r\n","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\Upcoming.js",["49","50"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PaginationBar from \"../components/PaginationBar\";\r\nimport SearchForm from \"../components/SearchForm\";\r\n\r\nconst UpComing = () => {\r\n  const [movies, setMovies] = useState(null);\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [totalPageNum, setTotalPageNum] = useState(0);\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const api = `5193ab5a3642f863333b0992eb6a8a01`;\r\n  let url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${api}&language=en-US&page=${pageNum}`;\r\n  const baseUrl = `https://image.tmdb.org/t/p/w500`;\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setQuery(searchInput);\r\n  };\r\n\r\n  const jumpToAbout = (id) => {\r\n    history.push(`/movies/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (query)\r\n          url = `https://api.themoviedb.org/3/search/movie?api_key=${api}&query=${query}`;\r\n        const res = await fetch(url);\r\n\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setMovies(data.results);\r\n        setTotalPageNum(data.total_pages);\r\n        setPageNum(data.page);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [pageNum, query]);\r\n  console.log(\"movies1\", movies);\r\n\r\n  return (\r\n    <>\r\n      <SearchForm\r\n        loading={loading}\r\n        searchInput={searchInput}\r\n        handleSearchChange={handleSearchInputChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <ul>\r\n        <li className=\"d-flex flex-wrap \">\r\n          {movies &&\r\n            movies.map((movie) => {\r\n              return (\r\n                <div\r\n                  class=\"wrapper\"\r\n                  style={{ width: \"18rem\" }}\r\n                  onClick={() => jumpToAbout(movie.id)}\r\n                >\r\n                  <div class=\"card ml-3 mt-5\">\r\n                    <img src={`${baseUrl}${movie.poster_path}`} />\r\n                    <div class=\"info\">\r\n                      <h1>{movie.title}</h1>\r\n                      <p>{movie.overview}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </li>\r\n      </ul>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <PaginationBar\r\n          pageNum={pageNum}\r\n          setPageNum={setPageNum}\r\n          totalPageNum={totalPageNum}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpComing;\r\n","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\TopRated.js",["51","52"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PaginationBar from \"../components/PaginationBar\";\r\nimport SearchForm from \"../components/SearchForm\";\r\n\r\nconst TopRated = () => {\r\n  const [movies, setMovies] = useState(null);\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const [totalPageNum, setTotalPageNum] = useState(0);\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const api = `5193ab5a3642f863333b0992eb6a8a01`;\r\n  let url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${api}&language=en-US&page=${pageNum}`;\r\n  const baseUrl = `https://image.tmdb.org/t/p/w500`;\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setQuery(searchInput);\r\n  };\r\n\r\n  const jumpToAbout = (id) => {\r\n    history.push(`/movies/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (query)\r\n          url = `https://api.themoviedb.org/3/search/movie?api_key=${api}&query=${query}`;\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setMovies(data.results);\r\n        setTotalPageNum(data.total_pages);\r\n        setPageNum(data.page);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [pageNum, query]);\r\n  console.log(\"movies1\", movies);\r\n\r\n  return (\r\n    <>\r\n      <SearchForm\r\n        loading={loading}\r\n        searchInput={searchInput}\r\n        handleSearchChange={handleSearchInputChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <ul>\r\n        <li className=\"d-flex flex-wrap \">\r\n          {movies &&\r\n            movies.map((movie) => {\r\n              return (\r\n                <div\r\n                  class=\"wrapper\"\r\n                  style={{ width: \"18rem\" }}\r\n                  onClick={() => jumpToAbout(movie.id)}\r\n                >\r\n                  <div class=\"card ml-3 mt-5\">\r\n                    <img src={`${baseUrl}${movie.poster_path}`} />\r\n                    <div class=\"info\">\r\n                      <h1>{movie.title}</h1>\r\n                      <p>{movie.overview}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </li>\r\n      </ul>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <PaginationBar\r\n          pageNum={pageNum}\r\n          setPageNum={setPageNum}\r\n          totalPageNum={totalPageNum}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopRated;\r\n","C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\Home.js",["53","54"],"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\apiService.js",[],"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\components\\PaginationBar.js",[],"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\pages\\AboutMovie.js",["55","56","57","58"],"C:\\Users\\ASUS\\desktop\\coderschool\\week5\\week5_project\\src\\components\\SearchForm.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":23,"nodeType":"65","messageId":"66","endLine":2,"endColumn":30},{"ruleId":"67","severity":1,"message":"68","line":37,"column":17,"nodeType":"69","endLine":37,"endColumn":90},{"ruleId":"70","severity":1,"message":"71","line":73,"column":21,"nodeType":"72","endLine":73,"endColumn":67},{"ruleId":"67","severity":1,"message":"68","line":37,"column":17,"nodeType":"69","endLine":37,"endColumn":90},{"ruleId":"70","severity":1,"message":"71","line":72,"column":21,"nodeType":"72","endLine":72,"endColumn":67},{"ruleId":"67","severity":1,"message":"68","line":39,"column":17,"nodeType":"69","endLine":39,"endColumn":90},{"ruleId":"70","severity":1,"message":"71","line":75,"column":19,"nodeType":"72","endLine":75,"endColumn":65},{"ruleId":"63","severity":1,"message":"73","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},{"ruleId":"63","severity":1,"message":"74","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":22},{"ruleId":"67","severity":1,"message":"75","line":30,"column":6,"nodeType":"76","endLine":30,"endColumn":8,"suggestions":"77"},{"ruleId":"67","severity":1,"message":"75","line":46,"column":6,"nodeType":"76","endLine":46,"endColumn":15,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'url' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","TemplateLiteral","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'movies' is assigned a value but never used.","'totalPageNum' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [url]",{"range":"87","text":"88"},"Update the dependencies array to be: [pageNum, url]",{"range":"89","text":"90"},[985,987],"[url]",[1383,1392],"[pageNum, url]"]